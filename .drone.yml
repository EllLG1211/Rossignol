kind: pipeline
type: docker
name: default

trigger:
  event:
    - push

steps:
  - name: build
    image: mcr.microsoft.com/dotnet/sdk:6.0
    commands:
      - cd Sources/
      - dotnet restore Console_Rossignol.sln
      - dotnet build Console_Rossignol.sln -c Release --no-restore
      - dotnet publish Console_Rossignol.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release

  - name: tests
    image: mcr.microsoft.com/dotnet/sdk:6.0
    commands:
      - cd Sources/
      - dotnet restore Console_Rossignol.sln
      - dotnet test Console_Rossignol.sln --no-restore
    depends_on: [build]

  - name: code-analysis
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dronesonarplugin-dotnet6
    commands:
      - cd Sources/
      - dotnet restore Console_Rossignol.sln
      - dotnet sonarscanner begin /k:Rossignol /d:sonar.host.url=$${PLUGIN_SONAR_HOST} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.exclusions="Tests/** , EF_Online/Migrations/** , ApiAssemblies/API_Gateway/** " /d:sonar.coverage.exclusions="Tests/**" /d:sonar.login=$${PLUGIN_SONAR_TOKEN} 
      - dotnet build Console_Rossignol.sln -c Release --no-restore
      - dotnet test Console_Rossignol.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
      - dotnet publish Console_Rossignol.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet sonarscanner end /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
    secrets: [ SECRET_SONAR_LOGIN ]
    settings:
      sonar_host: https://codefirst.iut.uca.fr/sonar/
      sonar_token:
        from_secret: SECRET_SONAR_LOGIN
    when:
      branch:
        - master
    depends_on: [build]

  - name: generate-and-deploy-docs
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-docdeployer
    failure: ignore
    volumes:
      - name: docs
        path: /docs
    when:
      branch:
        - master
    commands:
      - /entrypoint.sh
    depends_on: [ build ]

  - name: docker-build-gateway
    image: plugins/docker
    settings:
      dockerfile: Sources/ApiAssemblies/API_Gateway/Dockerfile
      context: .
      registry: hub.codefirst.iut.uca.fr
      repo: hub.codefirst.iut.uca.fr/valentin.clergue/rossignol.gateway
      username:
        from_secret: SECRET_REGISTRY_USERNAME
      password:
        from_secret: SECRET_REGISTRY_PASSWORD
    when:
      branch:
        - master
    depends_on: [ build ]

  - name: docker-build-restapi
    image: plugins/docker
    settings:
      dockerfile: Sources/ApiAssemblies/API_REST/Dockerfile
      context: .
      registry: hub.codefirst.iut.uca.fr
      repo: hub.codefirst.iut.uca.fr/valentin.clergue/rossignol.restapi
      username:
        from_secret: SECRET_REGISTRY_USERNAME
      password:
        from_secret: SECRET_REGISTRY_PASSWORD
    when:
      branch:
        - master
    depends_on: [ build ]

  - name: deploy-container-database
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
    environment:
      IMAGENAME: mysql:latest
      CONTAINERNAME: rossignol-database
      COMMAND: create
      # OVERWRITE: true
      PRIVATE: true
      CODEFIRST_CLIENTDRONE_ENV_MYSQL_ROOT_PASSWORD  :
        from_secret: db_root_password
      CODEFIRST_CLIENTDRONE_ENV_MYSQL_DATABASE:
        from_secret: db_database
      CODEFIRST_CLIENTDRONE_ENV_MYSQL_USER:
        from_secret: db_user
      CODEFIRST_CLIENTDRONE_ENV_MYSQL_PASSWORD:
        from_secret: db_password
      ADMINS: valentinclergue,yorickgeoffre,mathisribemont,eliottle_guehennec
    when:
      branch:
        - master
    depends_on: [ build ]

  - name: deploy-container-gateway
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
    environment:
        IMAGENAME: hub.codefirst.iut.uca.fr/valentin.clergue/rossignol.gateway:latest
        CONTAINERNAME: rossignolgateway
        COMMAND: create
        OVERWRITE: true
        CODEFIRST_CLIENTDRONE_ENV_DB_SERVER:
          from_secret: db_server
        CODEFIRST_CLIENTDRONE_ENV_DB_USER:
          from_secret: db_user
        CODEFIRST_CLIENTDRONE_ENV_DB_PASSWORD:
          from_secret: db_password
        CODEFIRST_CLIENTDRONE_ENV_DB_DATABASE:
          from_secret: db_database
        ADMINS: valentinclergue,yorickgeoffre,mathisribemont,eliottle_guehennec
    when:
      branch:
        - master
    depends_on: [ docker-build-gateway ]

  - name: deploy-container-restapi
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
    environment:
        IMAGENAME: hub.codefirst.iut.uca.fr/valentin.clergue/rossignol.restapi:latest
        CONTAINERNAME: rossignolrestapi
        COMMAND: create
        OVERWRITE: true
        CODEFIRST_CLIENTDRONE_ENV_DB_SERVER:
          from_secret: db_server
        CODEFIRST_CLIENTDRONE_ENV_DB_USER:
          from_secret: db_user
        CODEFIRST_CLIENTDRONE_ENV_DB_PASSWORD:
          from_secret: db_password
        CODEFIRST_CLIENTDRONE_ENV_DB_DATABASE:
          from_secret: db_database
        ADMINS: valentinclergue,yorickgeoffre,mathisribemont,eliottle_guehennec
    when:
      branch:
        - master
    depends_on: [ docker-build-restapi ]

volumes:
- name: docs
  temp: {}