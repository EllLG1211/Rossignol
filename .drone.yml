kind: pipeline
type: docker
name: default
 
trigger:
  event:
    - push

steps:
  - name: build
    image: mcr.microsoft.com/dotnet/sdk:5.0
    volumes:
      - name: docs
        path: /docs
    commands:
      - cd Sources/
      - dotnet restore Solution.sln
      - dotnet build Solution.sln -c Release --no-restore
      - dotnet publish Solution.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release

  - name: tests
    image: mcr.microsoft.com/dotnet/sdk:5.0
    commands:
      - cd Sources/
      - dotnet restore Solution.sln
      - dotnet test Solution.sln --no-restore
    depends_on: [build]

  - name: code-analysis
    image: pubhub.codefirst.ddns.net/thbellem/codefirst-dronesonarplugin-dotnet5
    commands:
      - cd Sources/
      - dotnet restore Solution.sln
      - dotnet sonarscanner begin /k:Rossignol /d:sonar.host.url=$${PLUGIN_SONAR_HOST} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions="Tests/**" /d:sonar.login=$${PLUGIN_SONAR_TOKEN} 
      - dotnet build Solution.sln -c Release --no-restore
      - dotnet test Solution.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
      - dotnet publish Solution.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet sonarscanner end /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
    secrets: [ SECRET_SONAR_LOGIN ]
    settings:
      # accessible en ligne de commande par ${PLUGIN_SONAR_HOST}
      sonar_host: https://codefirst.ddns.net/sonar/
      # accessible en ligne de commande par ${PLUGIN_SONAR_TOKEN}
      sonar_token:
        from_secret: SECRET_SONAR_LOGIN
    depends_on: [tests]

  - name: generate-and-deploy-docs
    image: pubhub.codefirst.ddns.net/thbellem/codefirst-docdeployer
    volumes:
      - name: docs
        path: /docs
    commands:
      - cd Documentation/doxygen
      - doxygen Doxyfile
      - /entrypoint.sh
    when:
      branch:
        - master
    depends_on: [ build ]

volumes:
- name: docs
  temp: {}
